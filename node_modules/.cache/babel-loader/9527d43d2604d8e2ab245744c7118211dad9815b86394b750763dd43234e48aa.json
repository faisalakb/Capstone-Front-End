{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  status: 'idle',\n  error: null\n};\nconst baseUrl = 'http://localhost:3001/login';\nexport const loginUser = createAsyncThunk('user/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          password\n        }\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to login');\n    }\n    const data = await response.json();\n    const token = response.headers.get('Authorization').split(' ')[1]; // Extract token from header\n\n    return {\n      data,\n      token\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst loginUserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logoutUser(state) {\n      state.user = null;\n      state.status = 'idle';\n      state.error = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.user = action.payload;\n      state.token = action.payload.token;\n      localStorage.setItem('token', action.payload.token);\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n      state.token = null;\n      localStorage.removeItem('token');\n    });\n  }\n});\nexport const {\n  logoutUser\n} = loginUserSlice.actions;\nexport default loginUserSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","user","status","error","baseUrl","loginUser","email","password","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token","get","split","message","loginUserSlice","name","reducers","logoutUser","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","rejected","actions","reducer"],"sources":["/home/faisal/Documents/Final/Capstone-Front-End/src/features/user/loginUserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  status: 'idle',\n  error: null,\n};\n\nconst baseUrl = 'http://localhost:3001/login';\n\nexport const loginUser = createAsyncThunk(\n  'user/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      const response = await fetch(baseUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user: { email, password } }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to login');\n      }\n\n      const data = await response.json();\n      const token = response.headers.get('Authorization').split(' ')[1]; // Extract token from header\n\n      return { data, token };\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst loginUserSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logoutUser(state) {\n      state.user = null;\n      state.status = 'idle';\n      state.error = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.user = action.payload;\n        state.token = action.payload.token;\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.payload;\n        state.token = null;\n        localStorage.removeItem('token');\n      });\n  },\n});\n\nexport const { logoutUser } = loginUserSlice.actions;\n\nexport default loginUserSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,OAAO,MAAMC,SAAS,GAAGP,gBAAgB,CACvC,YAAY,EACZ,OAAO;EAAEQ,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,OAAO,EAAE;MACpCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,IAAI,EAAE;UAAEK,KAAK;UAAEC;QAAS;MAAE,CAAC;IACpD,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACpC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAGX,QAAQ,CAACG,OAAO,CAACS,GAAG,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEnE,OAAO;MAAEJ,IAAI;MAAEE;IAAM,CAAC;EACxB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACd,OAAOK,eAAe,CAACL,KAAK,CAACoB,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAED,MAAMC,cAAc,GAAGzB,WAAW,CAAC;EACjC0B,IAAI,EAAE,MAAM;EACZzB,YAAY;EACZ0B,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAAC3B,IAAI,GAAG,IAAI;MACjB2B,KAAK,CAAC1B,MAAM,GAAG,MAAM;MACrB0B,KAAK,CAACzB,KAAK,GAAG,IAAI;MAClByB,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBS,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC5B,SAAS,CAAC6B,OAAO,EAAGN,KAAK,IAAK;MACrCA,KAAK,CAAC1B,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACD+B,OAAO,CAAC5B,SAAS,CAAC8B,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC/CR,KAAK,CAAC1B,MAAM,GAAG,WAAW;MAC1B0B,KAAK,CAAC3B,IAAI,GAAGmC,MAAM,CAACC,OAAO;MAC3BT,KAAK,CAACR,KAAK,GAAGgB,MAAM,CAACC,OAAO,CAACjB,KAAK;MAClCS,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACjB,KAAK,CAAC;IACrD,CAAC,CAAC,CACDa,OAAO,CAAC5B,SAAS,CAACkC,QAAQ,EAAE,CAACX,KAAK,EAAEQ,MAAM,KAAK;MAC9CR,KAAK,CAAC1B,MAAM,GAAG,QAAQ;MACvB0B,KAAK,CAACzB,KAAK,GAAGiC,MAAM,CAACC,OAAO;MAC5BT,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBS,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAW,CAAC,GAAGH,cAAc,CAACgB,OAAO;AAEpD,eAAehB,cAAc,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}