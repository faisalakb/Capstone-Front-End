{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\n// Define initial state\nconst initialState = {\n  houses: [],\n  status: 'idle',\n  error: null\n};\n\n// Create async thunk to fetch all houses\nexport const fetchAllHouses = createAsyncThunk('houses/fetchAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('token'); // Get token from local storage\n    if (!token) {\n      throw new Error('Token not found in local storage');\n    }\n    const response = await fetch('http://localhost:3001/houses', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch houses');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Create renderHousesSlice\nconst renderHousesSlice = createSlice({\n  name: 'renderHouses',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // Fetch all houses pending\n    builder.addCase(fetchAllHouses.pending, state => {\n      state.status = 'loading';\n    });\n    // Fetch all houses fulfilled\n    builder.addCase(fetchAllHouses.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.houses = action.payload;\n      state.error = null;\n    });\n    // Fetch all houses rejected\n    builder.addCase(fetchAllHouses.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport default renderHousesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","houses","status","error","fetchAllHouses","_","rejectWithValue","token","localStorage","getItem","Error","response","fetch","headers","Authorization","ok","data","json","message","renderHousesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/home/faisal/Documents/Final/Capstone-Front-End/src/features/house/getHousesSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\n// Define initial state\nconst initialState = {\n  houses: [],\n  status: 'idle',\n  error: null,\n};\n\n// Create async thunk to fetch all houses\nexport const fetchAllHouses = createAsyncThunk(\n  'houses/fetchAll',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('token'); // Get token from local storage\n      if (!token) {\n        throw new Error('Token not found in local storage');\n      }\n\n      const response = await fetch('http://localhost:3001/houses', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch houses');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// Create renderHousesSlice\nconst renderHousesSlice = createSlice({\n  name: 'renderHouses',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Fetch all houses pending\n    builder.addCase(fetchAllHouses.pending, (state) => {\n      state.status = 'loading';\n    });\n    // Fetch all houses fulfilled\n    builder.addCase(fetchAllHouses.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.houses = action.payload;\n      state.error = null;\n    });\n    // Fetch all houses rejected\n    builder.addCase(fetchAllHouses.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  },\n});\n\nexport default renderHousesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;;AAEhE;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGN,gBAAgB,CAC5C,iBAAiB,EACjB,OAAOO,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAIG,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASP,KAAM;MACjC;IACF,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIL,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,OAAOG,eAAe,CAACH,KAAK,CAACe,OAAO,CAAC;EACvC;AACF,CACF,CAAC;;AAED;AACA,MAAMC,iBAAiB,GAAGpB,WAAW,CAAC;EACpCqB,IAAI,EAAE,cAAc;EACpBpB,YAAY;EACZqB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACpB,cAAc,CAACqB,OAAO,EAAGC,KAAK,IAAK;MACjDA,KAAK,CAACxB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACF;IACAqB,OAAO,CAACC,OAAO,CAACpB,cAAc,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3DF,KAAK,CAACxB,MAAM,GAAG,WAAW;MAC1BwB,KAAK,CAACzB,MAAM,GAAG2B,MAAM,CAACC,OAAO;MAC7BH,KAAK,CAACvB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IACF;IACAoB,OAAO,CAACC,OAAO,CAACpB,cAAc,CAAC0B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAACxB,MAAM,GAAG,QAAQ;MACvBwB,KAAK,CAACvB,KAAK,GAAGyB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeV,iBAAiB,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}